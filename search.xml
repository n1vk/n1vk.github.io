<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>在macOS上进行Verilog HDL仿真</title>
      <link href="%E6%95%99%E7%A8%8B/verilog-design-on-macos/"/>
      <url>%E6%95%99%E7%A8%8B/verilog-design-on-macos/</url>
      
        <content type="html"><![CDATA[<p>每当我回想起电路分析实验与模拟电路实验开课的那段时光，总不能忘记的是让电脑轰鸣发热的 VMware Fusion。即使是最简单的模拟电路仿真，也需要像 Multisim 这样功能无比强大的仿真软件。这样一个拥有庞大数据体量的软件只支持 Windows 似乎也是情理之中的。  </p><p>但对于Verilog HDL这样的硬件描述语言，<strong>如果只是简单的电路</strong>，我们就不再需要动辄十几兆字节的 Vivado 或者 Quartus，配置好编译软件和波形查看软件，我们就可以愉快的进行练习了。  </p><hr><h2 id="包管理器-Homebrew"><a href="#包管理器-Homebrew" class="headerlink" title="包管理器 Homebrew"></a>包管理器 Homebrew</h2><h2 id="代码编辑器-VSCode"><a href="#代码编辑器-VSCode" class="headerlink" title="代码编辑器 VSCode"></a>代码编辑器 VSCode</h2><h2 id="编译软件-Icarus-Verilog"><a href="#编译软件-Icarus-Verilog" class="headerlink" title="编译软件 Icarus Verilog"></a>编译软件 Icarus Verilog</h2><h2 id="仿真波形软件-Scansion"><a href="#仿真波形软件-Scansion" class="headerlink" title="仿真波形软件 Scansion"></a>仿真波形软件 Scansion</h2><h2 id="编写与编译-Verilog-文件"><a href="#编写与编译-Verilog-文件" class="headerlink" title="编写与编译 Verilog 文件"></a>编写与编译 Verilog 文件</h2><h2 id="编写-Testbench-文件"><a href="#编写-Testbench-文件" class="headerlink" title="编写 Testbench 文件"></a>编写 Testbench 文件</h2>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Verilog </tag>
            
            <tag> macOS </tag>
            
            <tag> 数字电路 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>亲手搭建自己的博客网站，从无到无穷 (Part 1)</title>
      <link href="%E6%95%99%E7%A8%8B/build-your-own-blog-pt1/"/>
      <url>%E6%95%99%E7%A8%8B/build-your-own-blog-pt1/</url>
      
        <content type="html"><![CDATA[<p>感谢你阅读这行文字！  </p><p>因为这正代表着我的网页搭建成功，工作正常，<del>甚至还有些好看</del>。而这距离一个仅有着 404 的空白页面只不到三天时间。如果你也有兴趣创建一个属于你自己的网站，那么这篇文章会以纯粹萌新的视角带你一起探索搭建它的方法。  </p><hr><h2 id="了解-Github-Pages"><a href="#了解-Github-Pages" class="headerlink" title="了解 Github Pages"></a>了解 Github Pages</h2><p>Github Pages 是 Github 造福广大人民群众而推出的一款静态页面托管服务，优点如下：</p><ul><li>它完全免费，不需要花钱租借服务器，只需要在 Github 注册账号；</li><li>它功能强大，有了大佬完成的主题，你完全无需了解任何网页前端知识就可以将自己的博客变的无比漂亮；</li><li>它省心省力，对萌新友好，有了 Hexo 这样的配置服务，甚至不用了解 Git 的用法，你所需要做的只是写博客而已；</li><li>(…)</li></ul><p>总而言之，Github Pages益处多多，如果你和我一样只是想保存无处安放的想法，GH 就是你的不二之选。<br>但在开始之前，让我先解释一下前面出现的词语们。</p><p><em>(以下的内容看不懂也没关系)</em></p><h3 id="什么是-Git？"><a href="#什么是-Git？" class="headerlink" title="什么是 Git？"></a>什么是 Git？</h3><p>我们先来看看 Git 的官网对于 Git 的定义：</p><blockquote><p>Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.</p><p>Git is easy to learn and has a tiny footprint with lightning fast performance. It outclasses SCM tools like Subversion, CVS, Perforce, and ClearCase with features like cheap local branching, convenient staging areas, and multiple workflows.</p></blockquote><p>….完全没看懂呢！<br>简而言之，Git 是一个<em>分布式版本控制系统</em>。当你对文件作出一些更改的时候，Git 可以将不同版本的文件进行保留，并且记录下每次都改变了什么。同时，Git 可以让许多人一起编辑文件，并通过服务器对文件的改动进行管理，最后得到成品文件。<br>在维护自己的博客时，我们仅仅会用到非常简单的、甚至是基本没有 Git 指令。所以你不必在此过多纠结。但如果你感兴趣的话，可以在<a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰的Git教程</a>里了解更多。</p><h3 id="什么是-Github？"><a href="#什么是-Github？" class="headerlink" title="什么是 Github？"></a>什么是 Github？</h3><h3 id="怎样使用-Github-Pages？"><a href="#怎样使用-Github-Pages？" class="headerlink" title="怎样使用 Github Pages？"></a>怎样使用 Github Pages？</h3><h2 id="了解-Hexo"><a href="#了解-Hexo" class="headerlink" title="了解 Hexo"></a>了解 Hexo</h2><h3 id="什么是-Hexo-？"><a href="#什么是-Hexo-？" class="headerlink" title="什么是 Hexo ？"></a>什么是 Hexo ？</h3><h3 id="如何使用-Hexo-管理我的-GH-Repository-？"><a href="#如何使用-Hexo-管理我的-GH-Repository-？" class="headerlink" title="如何使用 Hexo 管理我的 GH Repository ？"></a>如何使用 Hexo 管理我的 GH Repository ？</h3><h2 id="了解-Markdown"><a href="#了解-Markdown" class="headerlink" title="了解 Markdown"></a>了解 Markdown</h2>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> Hexo </tag>
            
            <tag> GithubPages </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
